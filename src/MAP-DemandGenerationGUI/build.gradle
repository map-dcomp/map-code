import org.gradle.internal.os.OperatingSystem

buildscript {
  dependencies {
    classpath "org.openjfx:javafx-plugin:0.0.7"
  }
}

// Plugins
plugins {
    //id 'com.dorongold.task-tree' version '1.3'
    id 'application'            
}
apply plugin: 'com.github.johnrengelman.shadow'

def props = new Properties()
file("../P2Protelis/gradle.properties").withInputStream { props.load(it) }
file("../gradle.common.properties").withInputStream { props.load(it) }

group = 'com.bbn.map'
version = props.getProperty("map_lofi_version")

description = """MAP Demand Generation GUI"""
mainClassName = 'com.bbn.map.DemandGenerationGUI.Main'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

configurations {
    providedRuntime
    all*.exclude group: 'ch.qos.logback'
}

if(JavaVersion.current() > JavaVersion.VERSION_1_8) {
    apply plugin: 'org.openjfx.javafxplugin'
    javafx {
        version = "12.0.1"
        modules = [ 'javafx.controls', 'javafx.fxml' ]
    }
}


dependencies {
    implementation project(':MAP-Agent')

    implementation group: 'org.apache.commons', name: 'commons-csv', version: props.getProperty("commons_csv_version")
    implementation group: 'commons-cli', name: 'commons-cli', version: props.getProperty("commons_cli_version")
    
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: props.getProperty("hamcrest_version")
    testImplementation( group: 'junit', name: 'junit', version: props.getProperty("junit_version")) {
        exclude module: 'hamcrest-core'
    }
}

checkstyle {
    config = resources.text.fromFile('style.xml', 'UTF-8')
    showViolations = true
    ignoreFailures = false
    toolVersion = "8.10"
}

task sourceJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

publishing {
    repositories {
        mavenLocal()
    }
    
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
}

shadowJar {
    classifier = 'executable'
    
    // for some reason including the Log4j2 dat file causes problems
    // excluding the file causes log4j4 to scan for plugins and everything works 
    exclude 'META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat'
 }
