#!/bin/sh

debug() { ! "${log_debug-false}" || log "DEBUG: $*" >&2; }
log() { printf '%s\n' "$*"; }
warn() { log "WARNING: $*" >&2; }
error() { log "ERROR: $*" >&2; }
fatal() { error "$*"; exit 1; }
try() { "$@" || fatal "'$@' failed"; }

mydir=$(cd "$(dirname "$0")" && pwd -L) || fatal "Unable to determine script directory"

git_branch=$(git show -s --pretty=%d HEAD | awk -F, '{print $2}' | awk -F')' '{print $1}')
git_version=$(git describe --always)
log "BRANCH: ${git_branch} GIT_VERSION: ${git_version}"

LOCAL_REPO="${mydir}"/.gradle-repo
LOCAL_MAVEN_REPO="${mydir}"/.maven-repo

env

log "Java is: $(type java)"
log "Javac is: $(type javac)"

try mkdir -p "${LOCAL_REPO}"
try mkdir -p "${LOCAL_MAVEN_REPO}"

#### when adding a new project please update <root>/src/build.sh

cd "${mydir}"/../src/P2Protelis
try ./gradlew --console plain --no-daemon --gradle-user-home "${LOCAL_REPO}" -Dmaven.repo.local=${LOCAL_MAVEN_REPO} clean build check publish

cd "${mydir}"/../src/MAP-ApplicationManager
try ./gradlew --console plain --no-daemon --gradle-user-home "${LOCAL_REPO}" -Dmaven.repo.local=${LOCAL_MAVEN_REPO}  clean build check publish

cd "${mydir}"/../src/MAP-Agent
try ./gradlew --console plain --no-daemon --gradle-user-home "${LOCAL_REPO}" -Dmaven.repo.local=${LOCAL_MAVEN_REPO}  clean build check publish

cd "${mydir}"/../src/MAP-Visualization
try ./gradlew --console plain --no-daemon --gradle-user-home "${LOCAL_REPO}" -Dmaven.repo.local=${LOCAL_MAVEN_REPO}  clean build check

exit 0
